defaults: &defaults
  docker:
    - image: circleci/node:9
  working_directory: ~/nuxt-styleguide

version: 2
jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Create yarn.lock checksum
          command: sha256sum yarn.lock > .yarn-lock-sum
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum ".yarn-lock-sum" }}
      - run:
          name: Install yarn and rlsr
          command: npm install yarn rlsr@3 --no-save
      - run:
          name: Resolve rlsr-latest verions
          command: $(npm bin)/rlsr pre
      - run:
          name: Install
          command: $(npm bin)/yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum ".yarn-lock-sum" }}
      - save_cache:
          paths:
            - ~/nuxt-styleguide
          key: v1-repo-{{ .Revision }}
  lint:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
          - v1-repo-{{ .Revision }}
      - run:
          name: Lint
          command: npm run lint
  build:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
          - v1-repo-{{ .Revision }}
      - run:
          name: Build
          command: cd demo && ROUTER_BASE='/nuxt-styleguide/' $(npm bin)/nuxt generate
      - save_cache:
          paths:
            - ~/nuxt-styleguide/dist
          key: v1-dist-{{ .Revision }}
  deploy-gh-pages:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
          - v1-repo-{{ .Revision }}
      - restore_cache:
          keys:
          - v1-dist-{{ .Revision }}
      - add_ssh_keys:
          fingerprints:
            - "ae:29:8b:7f:01:22:f8:71:f0:c7:06:2f:bf:c3:89:2d"
      - run:
          name: Add github.com host
          command: echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' >> ~/.ssh/known_hosts
      - run:
          name: Checkout gh-pages branch
          command: git clone --depth=1 -b gh-pages git@github.com:sumcumo/nuxt-styleguide.git gh-pages
      - run:
          name: Set git identity
          command: cd gh-pages && git config user.email "nuxt-styleguide@xiphe.net" && git config user.name "nuxt-styleguide-bot"
      - run:
          name: Update gh-pages
          command: mv gh-pages/.git dist/.git && cd dist && git add . && git commit -m'update gh-pages' -m'[ci skip]' || true
      - run:
          name: Push gh-pages branch
          command: cd dist && git push origin gh-pages
  release:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
          - v1-repo-{{ .Revision }}
      - run:
          name: Install rlsr
          command: npm install rlsr@3 --no-save
      - run:
          name: Set npmrc
          command: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > ~/.npmrc
      - add_ssh_keys:
          fingerprints:
            - "ae:29:8b:7f:01:22:f8:71:f0:c7:06:2f:bf:c3:89:2d"
      - run:
          name: Add github.com host
          command: echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' >> ~/.ssh/known_hosts
      - run:
          name: Set git identity
          command: git config user.email "nuxt-styleguide@xiphe.net" && git config user.name "nuxt-styleguide-bot"
      - run:
          name: Release
          command: $(npm bin)/rlsr perform

workflows:
  version: 2
  deploy:
    jobs:
      - install:
          filters:
            branches:
              ignore: gh-pages
      - lint:
          requires:
            - install
      - build:
          requires:
            - install
      - release:
          requires:
            - build
            - lint
          filters:
            branches:
              only: master
      - deploy-gh-pages:
          requires:
            - build
            - lint
          filters:
            branches:
              only: master
